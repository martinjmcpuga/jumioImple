{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/martin/git/jumioImple/node_modules/%40jumio/websdk/loader.BMK4_g6C.js"],"sourcesContent":["const I = \"data:text/javascript;base64,LyogQ29weXJpZ2h0KGMpIDIwMTgsIGlvdmF0aW9uLCBpbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuICovCndpbmRvdy5pb19nbG9iYWxfb2JqZWN0X25hbWUgPSAnSUdMT08nOwp3aW5kb3cuSUdMT08gPSB3aW5kb3cuSUdMT08gfHwgewogIGVuYWJsZV9mbGFzaDogZmFsc2UsCiAgYmJfY2FsbGJhY2s6IHdpbmRvdy5iYl9jYWxsYmFjaywKICBsb2FkZXI6IHsKICAgIHN1YmtleTogJycsCiAgICB2ZXJzaW9uOiAnZ2VuZXJhbDUnCiAgfQp9OwoKLyoKIENvcHlyaWdodChjKSAyMDE4LCBpb3ZhdGlvbiwgaW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLgoqLwooZnVuY3Rpb24gQigpIHsKICBmdW5jdGlvbiB2KGUsIGEpIHsKICAgIHZhciBiID0ge30sCiAgICAgIGM7CiAgICBmb3IgKGMgPSBlLmxlbmd0aCAtIDE7IC0xIDwgYzsgYy0tKSB7CiAgICAgIDAgPCBjCiAgICAgICAgPyAoYltjXSA9IChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBkID0gYzsKICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICB3KGVbZF0sIGJbZCArIDFdLCBhKTsKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pKCkpCiAgICAgICAgOiB3KGVbY10sIGJbYyArIDFdLCBhKTsKICAgIH0KICB9CiAgZnVuY3Rpb24gdyhlLCBuLCBrKSB7CiAgICB2YXIgYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpLAogICAgICBmLAogICAgICBnLAogICAgICBsOwogICAgbCA9IEEoKGFba10gJiYgYVtrXS5zdGF0aWNWZXIgJiYgYVtrXS5zdGF0aWNWZXIgKyAnLycpIHx8IGVbMV0pOwogICAgZVswXSA9IGVbMF0ucmVwbGFjZSgnIyN2ZXJzaW9uIyMnLCBsKTsKICAgIGYgPSBlWzBdLnNwbGl0KCc/JylbMF0uc3BsaXQoJy8nKTsKICAgIGcgPSBmW2YubGVuZ3RoIC0gMV0uc3BsaXQoJy4nKVswXTsKICAgIHUudGVzdChlWzFdKSAmJiBsICE9PSBlWzFdICYmIGQoJ2xvYWRlcjogT3ZlcnJpZGluZyBjb25maWd1cmVkIHZlcnNpb24gd2l0aCBzdGF0aWNWZXIuJyk7CiAgICBjLnNldEF0dHJpYnV0ZSgnc3JjJywgZVswXSk7CiAgICBjICYmIGMuYWRkRXZlbnRMaXN0ZW5lcgogICAgICA/IGMuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBiW2sgKyAnXycgKyBnICsgJ19sb2FkX2ZhaWx1cmUnXSA9ICd0cnVlJzsKICAgICAgICB9KQogICAgICA6IGMuYXR0YWNoRXZlbnQgJiYKICAgICAgICBjLmF0dGFjaEV2ZW50KCdvbmVycm9yJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgYltrICsgJ18nICsgZyArICdfbG9hZF9mYWlsdXJlJ10gPSAndHJ1ZSc7CiAgICAgICAgfSk7CiAgICBuICYmIChjLm9ubG9hZCA9IG4pOwogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChjKTsKICB9CiAgZnVuY3Rpb24gZChlKSB7CiAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGEudHJhY2VfaGFuZGxlcikgewogICAgICB0cnkgewogICAgICAgIGEudHJhY2VfaGFuZGxlcihlKTsKICAgICAgfSBjYXRjaCAoYikge30KICAgIH0KICB9CiAgZnVuY3Rpb24gZihiLCBhKSB7CiAgICB2YXIgZCA9IG51bGwgIT09IGIgJiYgdm9pZCAwICE9PSBiOwogICAgcmV0dXJuICFkIHx8ICgnMScgIT09IGIudG9TdHJpbmcoKSAmJiAndHJ1ZScgIT09IGIudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKQogICAgICA/ICFkIHx8ICgnMCcgIT09IGIudG9TdHJpbmcoKSAmJiAnZmFsc2UnICE9PSBiLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSkKICAgICAgICA/ICdib29sZWFuJyA9PT0gdHlwZW9mIGEKICAgICAgICAgID8gYQogICAgICAgICAgOiAhMQogICAgICAgIDogITEKICAgICAgOiAhMDsKICB9CiAgZnVuY3Rpb24gQShhKSB7CiAgICBkKCcqKioqKioqKioqIHZlcnNpb24gYmVmb3JlIHJlcGxhY2U6ICcgKyBhICsgJyAqKioqKioqKioqJyk7CiAgICBkKCdsb2NhbE5hbWVzcGFjZVsgInVybF9kb3RzX3RvX2Rhc2hlcyIgXTogJyArIGIudXJsX2RvdHNfdG9fZGFzaGVzKTsKICAgIGQoJ251bWVyaWNWZXJzaW9uUGF0dGVybi50ZXN0KCBvdXRwdXQgKTogJyArIHUudGVzdChhKSk7CiAgICBiLnVybF9kb3RzX3RvX2Rhc2hlcyAmJiB1LnRlc3QoYSkgJiYgKGEgPSBhLnJlcGxhY2UoL1wuL2csICctJykpOwogICAgZCgndmVyc2lvbiBhZnRlciByZXBsYWNlOiAnICsgYSk7CiAgICByZXR1cm4gYTsKICB9CiAgdmFyIGcgPSB3aW5kb3csCiAgICB4ID0gZy5pb19nbG9iYWxfb2JqZWN0X25hbWUgfHwgJ0lHTE9PJywKICAgIGEgPSAoZ1t4XSA9IGdbeF0gfHwge30pLAogICAgYiA9IChhLmxvYWRlciA9IGEubG9hZGVyIHx8IHt9KSwKICAgIHkgPSBbXSwKICAgIHogPSBbXSwKICAgIHUgPSAvXlswLTldezEsM30oXC5bMC05XXsxLDN9KXsyfVwvJC87CiAgaWYgKGIubG9hZGVyTWFpbikgewogICAgcmV0dXJuIGQoImxvYWRlcjogTG9hZGVyIHNjcmlwdCBoYXMgYWxyZWFkeSBydW4sIHRyeSByZWR1Y2luZyB0aGUgbnVtYmVyIG9mIHBsYWNlcyBpdCdzIGJlaW5nIGluY2x1ZGVkLiIpLCAhMTsKICB9CiAgYi5sb2FkZXJNYWluID0gQjsKICBiLmxvYWRlclZlciA9ICc1LjIuMic7CiAgKGZ1bmN0aW9uICgpIHsKICAgIHZhciBlID0gZihiLnRwLCAhMCksCiAgICAgIG4gPSBmKGIuZnBfc3RhdGljLCAhMCksCiAgICAgIGsgPSBmKGIuZnBfZHluLCAhMCksCiAgICAgIGMgPSBmKGIuZW5hYmxlX2xlZ2FjeV9jb21wYXRpYmlsaXR5KSwKICAgICAgdSA9IGYoYi50cF9zcGxpdCksCiAgICAgIHYgPSAoYi50cF9ob3N0ICYmIGIudHBfaG9zdC5yZXBsYWNlKC9cLyskLywgJycpKSB8fCAnaHR0cHM6Ly9tcHNuYXJlLmllc25hcmUuY29tJywKICAgICAgbCA9IGIuZnBfc3RhdGljX292ZXJyaWRlX3VyaSwKICAgICAgbSA9IHZvaWQgMCAhPT0gYi51cmlfaG9vayA/IGIudXJpX2hvb2sgKyAnLycgOiAnL2lvanMvJywKICAgICAgcCA9IChiLnZlcnNpb24gfHwgJ3ZlcnNpb25PckFsaWFzSXNSZXF1aXJlZCcpICsgJy8nLAogICAgICB3ID0gYi5zdWJrZXkgPyBnLmVuY29kZVVSSUNvbXBvbmVudChiLnN1YmtleSkgKyAnLycgOiAnJywKICAgICAgeCA9IGIudHBfcmVzb3VyY2UgfHwgJ3dkcC5qcycsCiAgICAgIHEgPSBiLnRwX2hvc3QgPyAnJnRwX2hvc3Q9JyArIGcuZW5jb2RlVVJJQ29tcG9uZW50KGIudHBfaG9zdCkgOiAnJywKICAgICAgQyA9IGwgPyAnJmZwX3N0YXRpY191cmk9JyArIGcuZW5jb2RlVVJJQ29tcG9uZW50KGwpIDogJycsCiAgICAgIHIsCiAgICAgIHQsCiAgICAgIGg7CiAgICBiLnRwX2hvc3QgPSB2OwogICAgciA9IGYoYS5lbmFibGVfZmxhc2gsICEwKTsKICAgIHQgPSBhLmlvICYmIGEuaW8uZW5hYmxlX2ZsYXNoOwogICAgaCA9IGEuZnAgJiYgYS5mcC5lbmFibGVfZmxhc2g7CiAgICB0ID0gdm9pZCAwICE9PSB0ICYmIG51bGwgIT09IHQgPyBmKHQsICEwKSA6IHI7CiAgICB2b2lkIDAgIT09IGggJiYgbnVsbCAhPT0gaCA/IChoID0gZihoLCAhMCkpIDogKHQgPSByKTsKICAgIHIgPSB0ID8gJyZmbGFzaD10cnVlJyA6ICcmZmxhc2g9ZmFsc2UnOwogICAgaCA9IGggPyAnJmZsYXNoPXRydWUnIDogJyZmbGFzaD1mYWxzZSc7CiAgICBxID0KICAgICAgJz9sb2FkZXJWZXI9JyArCiAgICAgIGIubG9hZGVyVmVyICsKICAgICAgJyZjb21wYXQ9JyArCiAgICAgIGMgKwogICAgICAnJnRwPScgKwogICAgICBlICsKICAgICAgJyZ0cF9zcGxpdD0nICsKICAgICAgdSArCiAgICAgIHEgKwogICAgICAnJmZwX3N0YXRpYz0nICsKICAgICAgbiArCiAgICAgICcmZnBfZHluPScgKwogICAgICBrICsKICAgICAgQzsKICAgIGUgfHwgbiB8fCBkKCdsb2FkZXI6IE5vdCBjdXJyZW50bHkgY29uZmlndXJlZCB0byBsb2FkIGZwX3N0YXRpYyBvciB0cCBzY3JpcHQocykuJyk7CiAgICBhLmZwICYmCiAgICAgIGEuZnAuc3RhdGljVmVyICYmCiAgICAgIGEuZnAuc3RhdGljVmVyICsgJy8nICE9PSBwICYmCiAgICAgICgocCA9IEEoYS5mcC5zdGF0aWNWZXIgKyAnLycpKSwKICAgICAgZCgnbG9hZGVyOiBDb25maWd1cmVkIHZlcnNpb24gcmVwbGFjZWQgd2l0aCB0aGF0IGZyb20gcHJlLWxvYWRlZCBzdGF0aWMgc2NyaXB0LicpKTsKICAgIG4gfHwgKGEuZnAgJiYgYS5mcC5zdGF0aWNNYWluKQogICAgICA/ICgobSA9IChtICsgJyMjdmVyc2lvbiMjJyArIHcpLnJlcGxhY2UoL1wvXC8vZywgJy8nKSksCiAgICAgICAgbiAmJgogICAgICAgICAgKGEuZnAgJiYgYS5mcC5zdGF0aWNNYWluCiAgICAgICAgICAgID8gYyAmJgogICAgICAgICAgICAgICFhLmZwLnByZUNvbXBhdE1haW4gJiYKICAgICAgICAgICAgICBkKCdsb2FkZXI6IGVuYWJsZV9sZWdhY3lfY29tcGF0aWJpbGl0eSBvbiwgYnV0IGluY2x1ZGVkIHN0YXRpYyBkb2VzIG5vdCBoYXZlIHRoZSBjb21wYXQgd3JhcHBlci4nKQogICAgICAgICAgICA6IGwKICAgICAgICAgICAgICA/IHkucHVzaChbbCwgJyddKQogICAgICAgICAgICAgIDogeS5wdXNoKFttICsgJ3N0YXRpY193ZHAuanMnICsgcSArIGgsIHBdKSksCiAgICAgICAgIWsgfHwgKGEuZnAgJiYgYS5mcC5keW5NYWluKQogICAgICAgICAgPyBhLmZwICYmCiAgICAgICAgICAgIGEuZnAuZHluTWFpbiAmJgogICAgICAgICAgICBkKAogICAgICAgICAgICAgICJsb2FkZXI6IEZpcnN0IHBhcnR5IGR5bmFtaWMgc2NyaXB0IGhhcyBhbHJlYWR5IGJlZW4gbG9hZGVkLCBkaXNhYmxlIGZwX2R5biBvciBtYWtlIHN1cmUgeW91J3JlIG5vdCBtYW51YWxseSBpbmNsdWRpbmcgdGhlIGR5bmFtaWMgZmlsZSBzZXBhcmF0ZWx5LiIKICAgICAgICAgICAgKQogICAgICAgICAgOiB5LnB1c2goW20gKyAnZHluX3dkcC5qcycgKyBxICsgaCwgcF0pKQogICAgICA6IGYoYi5mcF9keW4pICYmIGQoJ2xvYWRlcjogSW52YWxpZCBDb25maWcsIGZpcnN0IHBhcnR5IGR5bmFtaWMgc2NyaXB0IHNldCB0byBsb2FkIHdpdGhvdXQgc3RhdGljLicpOwogICAgZSAmJgogICAgICAoYS5pbyAmJiBhLmlvLnN0YXRpY01haW4KICAgICAgICA/IGQoJ2xvYWRlcjogVGhpcmQgcGFydHkgc2NyaXB0IGhhcyBhbHJlYWR5IGJlZW4gbG9hZGVkLicpCiAgICAgICAgOiAoKG0gPSB2ICsgJy8jI3ZlcnNpb24jIycgKyB3KSwKICAgICAgICAgIHUKICAgICAgICAgICAgPyAoei5wdXNoKFttICsgJ3N0YXRpY193ZHAuanMnICsgcSArIHIsIHBdKSwKICAgICAgICAgICAgICB6LnB1c2goW20gKyAnZHluX3dkcC5qcycgKyBxICsgciwgcF0pLAogICAgICAgICAgICAgIGIudHBfcmVzb3VyY2UgJiYgZCgnbG9hZGVyOiBJbnZhbGlkIENvbmZpZzogYm90aCB0cF9yZXNvdXJjZSBhbmQgdHBfc3BsaXQgc2V0LiBJZ25vcmluZyB0cF9yZXNvdXJjZS4nKSkKICAgICAgICAgICAgOiB6LnB1c2goW20gKyB4ICsgcSArIHIsIHBdKSkpOwogIH0pKCk7CiAgdih5LCAnZnAnKTsKICB2KHosICdpbycpOwp9KSgpOwo=\";\nexport {\n  I as default\n};\n//# sourceMappingURL=loader.BMK4_g6C.js.map\n"],"names":[],"mappings":";;;AAAA,MAAM,IAAI;;CAIV,2CAA2C","ignoreList":[0],"debugId":null}}]
}